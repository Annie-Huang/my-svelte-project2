https://svelte.dev/tutorial/basics
https://svelte.dev/blog/the-easiest-way-to-get-started

https://github.com/sveltejs/eslint-plugin-svelte3
https://www.npmjs.com/package/eslint-plugin-svelte3
https://www.rockyourcode.com/prettier-and-es-lint-setup-for-svelte-js
https://github.com/sveltejs/eslint-plugin-svelte3
https://github.com/UnwrittenFun/prettier-plugin-svelte

==================================


C:\react>npx degit sveltejs/template my-svelte-project2
C:\react>cd my-svelte-project2
C:\react\my-svelte-project2>npm install
npm run dev

C:\react\my-svelte-project2>git init
C:\react\my-svelte-project2>git add .
C:\react\my-svelte-project2>git commit -m "first commit"
C:\react\my-svelte-project2>git remote add origin git@github.com:Annie-Huang/my-svelte-project2.git
C:\react\my-svelte-project2>git push -u origin master

C:\react\my-svelte-project2>npm install --save-dev eslint-plugin-svelte3
C:\react\my-svelte-project2>npm install --save-dev eslint prettier eslint-config-prettier eslint-plugin-prettier
C:\react\my-svelte-project2>npm install --save-dev babel-eslint

C:\react\my-svelte-project2>eslint --fix src/App.svelte
C:\react\my-svelte-project2>prettier --write --plugin-search-dir=. src\App.svelte


=======================================

Shorthand attributes:
<img {src} alt="A man dances.">

First, you'll need to integrate Svelte with a build tool. Popular choices are:
Rollup / rollup-plugin-svelte
webpack / svelte-loader
Parcel / parcel-plugin svelte


DOM event handlers can have modifiers that alter their behaviour. The full list of modifiers:
preventDefault — calls event.preventDefault() before running the handler. Useful for client-side form handling, for example.
stopPropagation — calls event.stopPropagation(), preventing the event reaching the next element
passive — improves scrolling performance on touch/wheel events (Svelte will add it automatically where it's safe to do so)
capture — fires the handler during the capture phase instead of the bubbling phase ()
once — remove the handler after the first time it runs
self — only trigger handler if event.target is the element itself
You can chain modifiers together, e.g. on:click|once|capture={...}.


The complete set of bindings for <audio> and <video> is as follows — four readonly bindings...
duration (readonly) — the total duration of the video, in seconds
buffered (readonly) — an array of {start, end} objects
seekable (readonly) — ditto
played (readonly) — ditto
...and four two-way bindings:

currentTime — the current point in the video, in seconds
playbackRate — how fast to play the video, where 1 is 'normal'
paused — this one should be self-explanatory
volume — a value between 0 and 1
